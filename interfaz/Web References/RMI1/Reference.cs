//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace interfaz.RMI1 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RMIStationSoap11Binding", Namespace="http://rmistation")]
    public partial class RMIStation : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback leerArchivoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetluminosidadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPantallaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHumedadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemperaturaOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPantallaOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public RMIStation() {
            this.Url = global::interfaz.Properties.Settings.Default.interfaz_RMI11_RMIStation;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event leerArchivoCompletedEventHandler leerArchivoCompleted;
        
        /// <remarks/>
        public event GetluminosidadCompletedEventHandler GetluminosidadCompleted;
        
        /// <remarks/>
        public event GetPantallaCompletedEventHandler GetPantallaCompleted;
        
        /// <remarks/>
        public event GetHumedadCompletedEventHandler GetHumedadCompleted;
        
        /// <remarks/>
        public event GetTemperaturaCompletedEventHandler GetTemperaturaCompleted;
        
        /// <remarks/>
        public event SetPantallaCompletedEventHandler SetPantallaCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:leerArchivo", RequestNamespace="http://rmistation", ResponseNamespace="http://rmistation", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string leerArchivo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string s) {
            object[] results = this.Invoke("leerArchivo", new object[] {
                        s});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void leerArchivoAsync(string s) {
            this.leerArchivoAsync(s, null);
        }
        
        /// <remarks/>
        public void leerArchivoAsync(string s, object userState) {
            if ((this.leerArchivoOperationCompleted == null)) {
                this.leerArchivoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnleerArchivoOperationCompleted);
            }
            this.InvokeAsync("leerArchivo", new object[] {
                        s}, this.leerArchivoOperationCompleted, userState);
        }
        
        private void OnleerArchivoOperationCompleted(object arg) {
            if ((this.leerArchivoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.leerArchivoCompleted(this, new leerArchivoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:Getluminosidad", RequestNamespace="http://rmistation", ResponseNamespace="http://rmistation", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string Getluminosidad() {
            object[] results = this.Invoke("Getluminosidad", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetluminosidadAsync() {
            this.GetluminosidadAsync(null);
        }
        
        /// <remarks/>
        public void GetluminosidadAsync(object userState) {
            if ((this.GetluminosidadOperationCompleted == null)) {
                this.GetluminosidadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetluminosidadOperationCompleted);
            }
            this.InvokeAsync("Getluminosidad", new object[0], this.GetluminosidadOperationCompleted, userState);
        }
        
        private void OnGetluminosidadOperationCompleted(object arg) {
            if ((this.GetluminosidadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetluminosidadCompleted(this, new GetluminosidadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetPantalla", RequestNamespace="http://rmistation", ResponseNamespace="http://rmistation", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetPantalla() {
            object[] results = this.Invoke("GetPantalla", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPantallaAsync() {
            this.GetPantallaAsync(null);
        }
        
        /// <remarks/>
        public void GetPantallaAsync(object userState) {
            if ((this.GetPantallaOperationCompleted == null)) {
                this.GetPantallaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPantallaOperationCompleted);
            }
            this.InvokeAsync("GetPantalla", new object[0], this.GetPantallaOperationCompleted, userState);
        }
        
        private void OnGetPantallaOperationCompleted(object arg) {
            if ((this.GetPantallaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPantallaCompleted(this, new GetPantallaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetHumedad", RequestNamespace="http://rmistation", ResponseNamespace="http://rmistation", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetHumedad() {
            object[] results = this.Invoke("GetHumedad", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHumedadAsync() {
            this.GetHumedadAsync(null);
        }
        
        /// <remarks/>
        public void GetHumedadAsync(object userState) {
            if ((this.GetHumedadOperationCompleted == null)) {
                this.GetHumedadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHumedadOperationCompleted);
            }
            this.InvokeAsync("GetHumedad", new object[0], this.GetHumedadOperationCompleted, userState);
        }
        
        private void OnGetHumedadOperationCompleted(object arg) {
            if ((this.GetHumedadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHumedadCompleted(this, new GetHumedadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetTemperatura", RequestNamespace="http://rmistation", ResponseNamespace="http://rmistation", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetTemperatura() {
            object[] results = this.Invoke("GetTemperatura", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTemperaturaAsync() {
            this.GetTemperaturaAsync(null);
        }
        
        /// <remarks/>
        public void GetTemperaturaAsync(object userState) {
            if ((this.GetTemperaturaOperationCompleted == null)) {
                this.GetTemperaturaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemperaturaOperationCompleted);
            }
            this.InvokeAsync("GetTemperatura", new object[0], this.GetTemperaturaOperationCompleted, userState);
        }
        
        private void OnGetTemperaturaOperationCompleted(object arg) {
            if ((this.GetTemperaturaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemperaturaCompleted(this, new GetTemperaturaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:SetPantalla", RequestNamespace="http://rmistation", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetPantalla([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string p) {
            this.Invoke("SetPantalla", new object[] {
                        p});
        }
        
        /// <remarks/>
        public void SetPantallaAsync(string p) {
            this.SetPantallaAsync(p, null);
        }
        
        /// <remarks/>
        public void SetPantallaAsync(string p, object userState) {
            if ((this.SetPantallaOperationCompleted == null)) {
                this.SetPantallaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPantallaOperationCompleted);
            }
            this.InvokeAsync("SetPantalla", new object[] {
                        p}, this.SetPantallaOperationCompleted, userState);
        }
        
        private void OnSetPantallaOperationCompleted(object arg) {
            if ((this.SetPantallaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPantallaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void leerArchivoCompletedEventHandler(object sender, leerArchivoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class leerArchivoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal leerArchivoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetluminosidadCompletedEventHandler(object sender, GetluminosidadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetluminosidadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetluminosidadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPantallaCompletedEventHandler(object sender, GetPantallaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPantallaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPantallaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetHumedadCompletedEventHandler(object sender, GetHumedadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHumedadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHumedadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetTemperaturaCompletedEventHandler(object sender, GetTemperaturaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemperaturaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemperaturaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SetPantallaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591